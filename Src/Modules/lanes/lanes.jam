SubDir LUAPLUS Src Modules lanes ;

{

local SRCS =
		src/keeper.lua
		src/threading.c
		src/threading.h
		src/lanes.c
		src/lanes.lua
		src/tools.c
		src/tools.h
;

CopyFile lanes : $(LUA_LDIR)/lanes.lua : $(SUBDIR)/src/lanes.lua ;

if ! $(TARGETINFO_LOCATE)
{

rule LuaToBinary PARENTS : TARGETS : SOURCES
{
	Depends $(TARGETS) : $(SOURCES) ;
	Depends $(TARGETS) : $(LUAC_EXE) ;

	Clean clean:$(PARENTS) : $(TARGETS) ;

	_LuaToBinary $(TARGETS) : $(SOURCES) ;
}

actions _LuaToBinary
{
	"$(LUAC_EXE:T)" -o $(1) $(2)
}


rule Bin2C PARENTS : TARGETS : SOURCES
{
	Depends $(TARGETS) : $(SOURCES) ;
	Depends $(TARGETS) : $(LUA_EXE) ;

	Clean clean:$(PARENTS) : $(TARGETS) ;

	BIN2C on $(TARGETS) = $(SUBDIR)/tools/bin2c.lua ;
	_Bin2C $(TARGETS) : $(SOURCES) ;
}

actions _Bin2C
{
	"$(LUA_EXE:T)" "$(BIN2C)" -o $(1) $(2)
}

}
else
{

rule LuaToBinary
{
}


rule Bin2C
{
}

}

local keeper.lua = <lanes>keeper.lua ;
SEARCH on $(keeper.lua) = $(SEARCH_SOURCE)/src ;

local keeper.lc = <lanes>keeper.lc ;
MakeLocate $(keeper.lc) : $(LOCATE_TARGET) ;

local keeper.lch = <lanes>keeper.lch ;
MakeLocate $(keeper.lch) : $(LOCATE_TARGET) ;
ForceCare $(keeper.lch) ;

LuaToBinary lanes : $(keeper.lc) : $(keeper.lua) ;
Bin2C lanes : $(keeper.lch) : $(keeper.lc) ;

C.IncludeDirectories lanes : $(LOCATE_TARGET) ;

if $(PLATFORM) = linux32
{
	C.LinkFlags lanes : -lpthread ;
}

C.OutputName lanes : lua51-lanes ;
LuaPlusAddModule lanes : $(SRCS) ;

}
